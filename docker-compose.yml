version: '3.7'

networks:
  kong-net:
    name: kong-net
    driver: bridge

services:
  account-service:
    build:
      context: "./"
      dockerfile: "build/docker/images/go/Dockerfile"
    container_name: account-service
    env_file:
      - .env
    links:
      - redis
    depends_on:
      - "account-db"
      - "redis"
    restart: unless-stopped
    working_dir: "/go/src/bookstore/cmd/account/"
    expose:
      - 8081
    command: bash -c "CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main . && ./main"
    networks:
      - kong-net
    ports:
      - "8081:8081"
  account-db:
    image: mysql:8.0
    container_name: account-database
    environment:
      MYSQL_DATABASE: BookstoreManager
      MYSQL_ROOT_PASSWORD: abc123
      MYSQL_TCP_PORT: 3307
    networks:
      - kong-net
    ports:
      - "3307:3306"
  inventory-service:
    build:
      context: "./"
      dockerfile: "build/docker/images/go/Dockerfile"
    container_name: inventory-service
    env_file:
      - .env
    links:
      - redis
    depends_on:
      - "inventory-db"
      - "redis"
    restart: unless-stopped
    working_dir: "/go/src/bookstore/cmd/inventory/"
    expose:
      - 8082
    command: bash -c "CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main . && ./main"
    networks:
      - kong-net
    ports:
      - "8082:8082"
  inventory-db:
    image: mysql:8.0
    container_name: inventory-database
    environment:
      MYSQL_DATABASE: Inventory
      MYSQL_ROOT_PASSWORD: abc123
      MYSQL_TCP_PORT: 3308
    networks:
      - kong-net
    ports:
      - "3308:3307"
  orders-service:
    build:
      context: "./"
      dockerfile: "build/docker/images/go/Dockerfile"
    container_name: orders-service
    env_file:
      - .env
    links:
      - redis
    depends_on:
      - "orders-db"
      - "redis"
    restart: unless-stopped
    working_dir: "/go/src/bookstore/cmd/orders/"
    expose:
      - 8083
    command: bash -c "CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main . && ./main"
    networks:
      - kong-net
    ports:
      - "8083:8083"
  orders-db:
    image: mysql:8.0
    container_name: orders-database
    environment:
      MYSQL_DATABASE: Orders
      MYSQL_ROOT_PASSWORD: abc123
      MYSQL_TCP_PORT: 3309
    networks:
      - kong-net
    ports:
      - "3309:3308"
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - kong-net
    ports:
      - "6380:6379"
  kong-database:
    image: postgres:9.6
    restart: always
    container_name: kong-db
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kong" ]
      interval: 5s
      timeout: 5s
      retries: 5
  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    container_name: kong-migration
    networks:
      - kong-net
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
    links:
      - kong-database
    depends_on:
      - kong-database
  kong:
    image: kong:latest
    restart: always
    container_name: kong
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    links:
      - kong-database
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://kong:8001" ]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"
      - "8443:8443"
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    container_name: konga-prepare
    networks:
      - kong-net
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=konga
      - KONG_PG_PASSWORD=kong
    links:
      - kong-database
    depends_on:
      - kong-database
  konga:
    image: pantsel/konga:latest
    restart: always
    container_name: konga
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong@kong-database:5432/konga
      NODE_ENV: production
    links:
      - kong-database
    depends_on:
      - kong
      - konga-prepare
    ports:
      - "1337:1337"